#!/bin/bash
#
# Pre-commit hook that runs go fmt on all staged .go files
# To install: make install-git-hooks
#

set -e

# Check if this is an initial commit
if git rev-parse --verify HEAD >/dev/null 2>&1; then
    against=HEAD
else
    # Initial commit: diff against an empty tree object
    against=$(git hash-object -t tree /dev/null)
fi

# Get list of staged .go files
staged_go_files=$(git diff --cached --name-only --diff-filter=ACM "$against" | grep '\.go$' || true)

if [ -z "$staged_go_files" ]; then
    # No .go files staged, exit successfully
    exit 0
fi

echo "Running go fmt on staged .go files..."

# Check if any files need formatting and collect them in an array
unformatted_files=()
while IFS= read -r file; do
    if [ -f "$file" ]; then
        # Check if file needs formatting
        if gofmt -l "$file" | grep -q "."; then
            unformatted_files+=("$file")
        fi
    fi
done <<< "$staged_go_files"

if [ ${#unformatted_files[@]} -gt 0 ]; then
    echo "Formatting ${#unformatted_files[@]} files..."

    # Format the files
    if ! gofmt -w "${unformatted_files[@]}"; then
        echo "Error: Failed to format files"
        exit 1
    fi

    # Stage the formatted files
    if ! git add "${unformatted_files[@]}"; then
        echo "Error: Failed to stage formatted files"
        exit 1
    fi

    echo "Formatted and staged ${#unformatted_files[@]} files"
fi

echo "All staged .go files are properly formatted."
