#!/bin/bash
#
# Pre-commit hook that runs go fmt on all staged .go files
# To install: make install-git-hooks
#

set -e

# Check if this is an initial commit
if git rev-parse --verify HEAD >/dev/null 2>&1; then
    against=HEAD
else
    # Initial commit: diff against an empty tree object
    against=$(git hash-object -t tree /dev/null)
fi

# Get list of staged .go files
staged_go_files=$(git diff --cached --name-only --diff-filter=ACM "$against" | grep '\.go$' || true)

if [ -z "$staged_go_files" ]; then
    # No .go files staged, exit successfully
    exit 0
fi

echo "Running go fmt on staged .go files..."

# Check for unformatted files
unformatted_files=$(gofmt -l $staged_go_files)
if [ -n "$unformatted_files" ]; then
    unformatted_files_array=($unformatted_files)
    if [ ${#unformatted_files_array[@]} -gt 0 ]; then
        echo "Formatting ${#unformatted_files_array[@]} files..."
        # Format the files
        if ! gofmt -w "${unformatted_files_array[@]}"; then
            echo "Error: Failed to format files"
            exit 1
        fi
        # Stage the formatted files
        if ! git add "${unformatted_files_array[@]}"; then
            echo "Error: Failed to stage formatted files"
            exit 1
        fi
        echo "Formatted and staged ${#unformatted_files_array[@]} files"
    fi
fi

echo "All staged .go files are properly formatted."
