name: Release Go CLI and Publish to npm

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  release:
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
            cc: gcc
            runner: ubuntu-latest
          - goos: linux
            goarch: arm64
            cc: aarch64-linux-gnu-gcc
            runner: ubuntu-latest
          # - goos: windows
          #   goarch: amd64
          #   cc: x86_64-w64-mingw32-gcc
          #   runner: ubuntu-latest
          # - goos: windows
          #   goarch: arm64
          #   cc: aarch64-w64-mingw32-gcc
          #   runner: ubuntu-latest
          - goos: darwin
            goarch: amd64
            cc: clang
            runner: macos-latest
          - goos: darwin
            goarch: arm64
            cc: clang
            runner: macos-latest
    runs-on: ${{ matrix.runner }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: actions/setup-go@v5
        with:
          go-version: '1.24.x'

      - name: Install cross-compilers for CGO (Linux/Windows only)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu gcc-mingw-w64 mingw-w64

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          version: "~> v2"
          args: build --single-target
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CGO_ENABLED: 1
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CC: ${{ matrix.cc }}

      - name: Upload Go binaries for npm
        uses: actions/upload-artifact@v4
        with:
          name: cem-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/cem*

  npm:
    name: Package and publish npm
    runs-on: ubuntu-latest
    needs: release
    steps:
      - uses: actions/checkout@v4

      - name: Download all binaries from matrix jobs
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Prepare npm package
        run: |
          echo "Preparing npm package"
          mkdir -p npm/bin
          cp -r dist/* npm/bin

      - name: Version npm package
        run: npm version from-git
        working-directory: ./npm

      - name: Publish to npm
        run: npm publish --access public
        working-directory: ./npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
