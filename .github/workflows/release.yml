name: Release Go CLI and Publish to npm

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  release:
    name: Release binaries with GoReleaser
    strategy:
      matrix:
        include:
          - id: cem-amd64
            goos: linux
            goarch: amd64
            runner: ubuntu-latest
          - id: cem-arm64
            goos: linux
            goarch: arm64
            runner: ubuntu-latest
          - id: cem-amd64
            goos: windows
            goarch: amd64
            runner: ubuntu-latest
          - id: cem-arm64
            goos: windows
            goarch: arm64
            runner: ubuntu-latest
          - id: cem-amd64
            goos: darwin
            goarch: amd64
            runner: macos-latest
          - id: cem-arm64
            goos: darwin
            goarch: arm64
            runner: macos-latest
    runs-on: ${{ matrix.runner }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: actions/setup-go@v5
        with:
          go-version: '1.24.x'

      - name: Install cross-compilers for CGO (Linux/Windows only)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu gcc-mingw-w64 mingw-w64

      - name: Set environment for GoReleaser
        run: |
          echo "GOOS=${{ matrix.goos }}" >> $GITHUB_ENV
          echo "GOARCH=${{ matrix.goarch }}" >> $GITHUB_ENV

      - name: Run GoReleaser for ${{ matrix.goos }}_${{ matrix.goarch }}
        uses: goreleaser/goreleaser-action@v5
        with:
          version: latest
          args: release --clean --skip-validate --id ${{ matrix.id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}

      - name: Upload Go binaries for npm
        uses: actions/upload-artifact@v4
        with:
          name: cem-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/cem*

  npm:
    name: Package and publish npm
    runs-on: ubuntu-latest
    needs: release
    steps:
      - uses: actions/checkout@v4

      - name: Download Go binaries
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Prepare npm package
        run: make prepare-npm

      - name: Install npm dependencies
        run: npm install
        working-directory: ./npm

      - name: Publish to npm
        run: npm publish --access public
        working-directory: ./npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
